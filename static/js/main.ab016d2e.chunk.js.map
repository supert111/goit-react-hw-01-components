{"version":3,"sources":["components/Social-profile/profile.module.css","components/SectionStatistics/statistics.module.css","components/FriendList/friendList.module.css","components/TransactionHistory/transactionHistory.module.css","components/Social-profile/Profile.jsx","components/SectionStatistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","percentage","id","defaultProps","FriendList","friends","friend_list","friend","isOnline","isOfline","width","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab016d2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3pfQ4\",\"description\":\"profile_description__1Hfmb\",\"avatar\":\"profile_avatar__31p7x\",\"name\":\"profile_name__10g36\",\"stats\":\"profile_stats__38Fqc\",\"quantity\":\"profile_quantity__3oiDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__1musm\",\"title\":\"statistics_title__31lj1\",\"stat_list\":\"statistics_stat_list__2IwrL\",\"label\":\"statistics_label__3uECl\",\"percentage\":\"statistics_percentage__1zw15\",\"item\":\"statistics_item__QehdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friendList_item__2PB-B\",\"avatar\":\"friendList_avatar__1Cev-\",\"isOnline\":\"friendList_isOnline__3UYBQ\",\"isOfline\":\"friendList_isOfline__kXv1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transactionHistory_transaction_history__3O6Fz\"};","import PropTypes from 'prop-types';\r\nimport styles from './profile.module.css'; \r\n\r\nconst Profile = ({name, tag, location, avatar, stats}) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.description}>\r\n                <img \r\n                    src={avatar} \r\n                    alt={name}\r\n                    className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{name}</p>\r\n                <p className={styles.tag}>@{tag}</p>\r\n                <p className={styles.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span className={styles.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Views</span>\r\n                    <span className={styles.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  };\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport styles from \"./statistics.module.css\";\r\n\r\n\r\nconst Statistics = ({title, stats}) => {\r\n    return (\r\n        <section className={styles.statistics}>\r\n            {title && <h2 className={styles.title}>{title}</h2>}\r\n            <ul className={styles.stat_list}>\r\n                {stats.map(stat => (\r\n        \r\n                    <li className={styles.item} key={stat.id}>\r\n                        <span className={styles.label}>{stat.label}</span>\r\n                        <span className={styles.percentage}>{stat.percentage}%</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n    color: PropTypes.objectOf(\r\n        PropTypes.shape({\r\n            backgroundColor: PropTypes.string.isRequired,\r\n        }),\r\n    )    \r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport styles from './friendList.module.css';\r\n\r\nconst FriendList = ({friends}) => {\r\n    return (\r\n        <>\r\n            <ul className={styles.friend_list}>\r\n                {friends.map(friend => \r\n                    <li className={styles.item} key={friend.id}>\r\n                        <span className={\r\n                            friend.isOnline ? styles.isOnline : styles.isOfline}>                                \r\n                        </span>\r\n\r\n                        <img className={styles.avatar} \r\n                            src={friend.avatar} \r\n                            alt={friend.name}\r\n                            width=\"48\"\r\n                        />\r\n                        <p className={styles.name}>{friend.name}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    )\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport styles from './transactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n        <table className={styles.transaction_history}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(item =>\r\n                    <tr key={item.id}>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table> \r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default TransactionHistory;","import Profile from './components/Social-profile/Profile';\r\nimport Statistics from './components/SectionStatistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\nimport user from './components/Social-profile/user.json';\r\nimport statisticalData from './components/SectionStatistics/statistical-data.json';\r\nimport friends from './components/FriendList/friends.json';\r\nimport transactions from './components/TransactionHistory/transactions.json';\r\n\r\n\r\nconst App = () => (\r\n    <> \r\n        <Profile \r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            avatar={user.avatar}\r\n            stats={user.stats}\r\n        />\r\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n        <FriendList friends={friends} />\r\n        <TransactionHistory items={transactions} />\r\n    </>\r\n\r\n);\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}